{% extends "cbeamd/dash_base.django" %}

{% block content %}
    <br>
    <div class="row">
      <div class="span6 terminal transparent" id="terminal" style="height:913px;">
          <div>user@c-beam&gt; who</div>
          {% for user in users %}
              <div>{{ user }}</div>
          {% empty %}
          {% endfor %}
              <div>total: {{ users|length }}</div>
          <div>user@c-beam&gt; tail activitylog</div>
          {% for entry in activitylog %}
              <div>{{ entry }}</div>
          {% empty %}
              <div>WTF</div>
          {% endfor %}
          <div>user@c-beam&gt;&nbsp;<blink>_</blink></div>
      </div>
      <div class="span6 terminal transparent">
          <h4>bar-status</h4>
          {% if barstatus %}
              <div class="btn btn-success"><h4>bar open</h4></div>
          {% else %}
              <div class="btn btn-danger"><h4>bar closed</h4></div>
          {% endif %}
      </div>
<!--
      <div class="span6 terminal">
          <h4>oxygen-concentration</h4>
          <div class="btn btn-danger"><h4>{{ levels.oxygen }}</h4></div>
      </div>
      <div class="span6 terminal">
          <h4>carbondichte</h4>
          <div class="btn btn-warning"><h4>{{ levels.carbon }}</h4></div>
      </div>
      <div class="span6 terminal">
          <h4>bewusstseins-status</h4>
          <div class="btn btn-primary"><h4>{{ levels.conscience }}</h4></div>
      </div>
-->
      <div class="span6 terminal" id="terminal">
          <div id="chartContainer" style="height: 250px; width: 100%;"></div>
      </div>
      <div class="span6 terminal" id="terminal">
          <div id="chartContainer2" style="height: 250px; width: 100%;"></div>
      </div>
      <div class="span6 terminal transparent">
          <h4>raum-ceit-fluctuation (x, y, z, t)</h4>
          <canvas id="chart" width="570" height="200"></canvas>
      </div>
  </div>
  <div class="row">
  </div>

<!--
  <div class="row">
      <div class="span6 terminal" id="terminal">
          <div>user@c-beam&gt; tail activitylog</div>
          {% for entry in activitylog %}
              <div>{{ entry }}</div>
          {% empty %}
              <div>WTF</div>
          {% endfor %}
          <div>user@c-beam&gt;&nbsp;</div>
      </div>
      <div class="span6 terminal" id="terminal">
          <div>user@c-beam&gt; who</div>
          {% for user in users %}
              <div>{{ user }}</div>
          {% empty %}
              <div>WTF</div>
          {% endfor %}
          <div>user@c-beam&gt;&nbsp;<blink>_</blink></div>
      </div>
-->
  </div>


{% endblock content%}

{% block extra_js %}
    <script type="text/javascript" src="/static/smoothie.js"></script>
    <script type="text/javascript">

      // Randomly add a data point every 500ms
      var random = new TimeSeries();
      var random2 = new TimeSeries();
      setInterval(function() {
        random.append(new Date().getTime(), Math.random() * 10000);
        random2.append(new Date().getTime(), Math.random() * 10000);
      }, 2000);

      function createTimeline() {
        var chart = new SmoothieChart();
        chart.addTimeSeries(random, { strokeStyle: 'rgba(0, 255, 0, 1)', fillStyle: 'rgba(0, 255, 0, 0.2)', lineWidth: 4 });
        chart.streamTo(document.getElementById("chart"), 2000);
        var chart2 = new SmoothieChart();
        chart2.addTimeSeries(random2, { strokeStyle: 'rgba(0, 0, 255, 1)', fillStyle: 'rgba(0, 0, 255, 0.2)', lineWidth: 4 });
        chart2.streamTo(document.getElementById("chart2"), 2000);
      }

      $(document).ready(function() {
        //createTimeline();
      });
    </script>

    <script type="text/javascript">
      var dataSet1 = new TimeSeries(),
          dataSet2 = new TimeSeries(),
          dataSet3 = new TimeSeries(),
          dataSet4 = new TimeSeries(),
          delayMillis = 2000;

      var addDataItems = function () {
        var now = new Date().getTime();
        dataSet1.append(now, Math.random());
        dataSet2.append(now, Math.random());
        dataSet3.append(now, Math.random());
        dataSet4.append(now, Math.random());
      };
      addDataItems();
      setInterval(addDataItems, delayMillis);

      // Build the timeline
      var smoothie = new SmoothieChart({ minValue: 0.0, maxValue: 1.0, millisPerPixel: 20, grid: { fillStyle: '#000', strokeStyle: '#555', lineWidth: 1, millisPerLine: 1000, verticalSections: 4 }});
      smoothie.addTimeSeries(dataSet1, { strokeStyle: 'rgba(255, 0, 0, 1)',   fillStyle: 'rgba(255, 0, 0, 0.2)',   lineWidth: 2 });
      smoothie.addTimeSeries(dataSet2, { strokeStyle: 'rgba(0, 255, 0, 1)',   fillStyle: 'rgba(0, 255, 0, 0.2)',   lineWidth: 2 });
      smoothie.addTimeSeries(dataSet3, { strokeStyle: 'rgba(0, 0, 255, 1)',   fillStyle: 'rgba(0, 0, 255, 0.2)',   lineWidth: 2 });
      smoothie.addTimeSeries(dataSet4, { strokeStyle: 'rgba(255, 255, 0, 1)', fillStyle: 'rgba(255, 255, 0, 0.2)', lineWidth: 2 });
      smoothie.streamTo(document.getElementById('chart'), delayMillis);

    </script>

<script type="text/javascript">
  window.onload = function () {
    var chart = new CanvasJS.Chart("chartContainer",
    {
      title:{
        text: "luftanalyse"
      },
      theme: "theme1",
      backgroundColor: "black",
      data: [
      {
        type: "doughnut",
        indexLabelFontSize: 20,
        startAngle:0,
        indexLabelFontColor: "dimgrey",       
        indexLabelLineColor: "darkgrey", 
        toolTipContent: "{y} %",          

        dataPoints: [
        {  y: 20.95, label: "O₂ {y}%" },
        {  y: 76.08, label: "N₂ {y}%" },
        {  y: 0.04, label: "CO₂ {y}%" },
        {  y: 1.02,  label: "C₁₀H₁₄N₂ {y}%"},
        {  y: 2.08, label: "C₂₁H₃₀O₂ {y}%" },
        {  y: 0.0005,  label: "H₂ {y}%"}

        ]
      }
      ]
    });

    chart.render();

    var chart2 = new CanvasJS.Chart("chartContainer2",
    {      
      title:{
        text: "bewusstseins-status"
      },
      axisY :{
        includeZero: false
      },
      backgroundColor: "black",
      axisX: {
        valueFormatString: "HH",
        interval: 1,
        intervalType: "hour"
      },
      data: [
      {        
        type: "spline",  
        indexLabelFontColor: "orangered",      
        dataPoints: [
        { x: new Date(2014, 00, 1, 0), y: 0.352 },
        { x: new Date(2014, 00, 1, 1), y: 0.514,  indexLabel: "erheitert" },
        { x: new Date(2014, 00, 1, 2), y: 0.321 },
        { x: new Date(2014, 00, 1, 3), y: 0.050 },
        { x: new Date(2014, 00, 1, 4), y: 0.050 , indexLabel: "ööhm"},
        { x: new Date(2014, 00, 1, 5), y: 0.050 },
        { x: new Date(2014, 00, 1, 6), y: 0.186 },
        { x: new Date(2014, 00, 1, 7), y: 0.281, indexLabel: "eskalation" },
        { x: new Date(2014, 00, 1, 8), y: 0.438 },
        { x: new Date(2014, 00, 1, 9), y: 0.305 },
        { x: new Date(2014, 00, 1, 10), y: 0.480 },
        { x: new Date(2014, 00, 1, 11), y: 0.305 },
        { x: new Date(2014, 00, 1, 12), y: 0.200 },
        { x: new Date(2014, 00, 1, 13), y: 0.125 },
        { x: new Date(2014, 00, 1, 14), y: 0.205 },
        { x: new Date(2014, 00, 1, 15), y: 0.100 },
        { x: new Date(2014, 00, 1, 16), y: 0.305 },
        { x: new Date(2014, 00, 1, 17), y: 0.505 },
        { x: new Date(2014, 00, 1, 18), y: -0.505, indexLabel: "aussreisser" },
        { x: new Date(2014, 00, 1, 19), y: 0.805 },
        { x: new Date(2014, 00, 1, 20), y: 0.605 },
        { x: new Date(2014, 00, 1, 21), y: 0.505 },
        { x: new Date(2014, 00, 1, 22), y: 0.992, indexLabel: "erweitert" },
        { x: new Date(2014, 00, 1, 23), y: 0.993 }        
        ]
      }
      ]
    });

    chart2.render();
  }
  </script>

  <script type="text/javascript" src="/static/canvasjs.min.js"></script>

{% endblock extra_js %}
